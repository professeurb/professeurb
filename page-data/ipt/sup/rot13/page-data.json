{"componentChunkName":"component---src-components-article-layout-js","path":"/ipt/sup/rot13/","webpackCompilationHash":"dffcefa0ee5828055b18","result":{"data":{"mdx":{"id":"5c79b362-c9f0-5f2a-979d-6968c9d7e472","frontmatter":{"title":"ROT13","subtitle":"Où l'on code des messages pour les rendre (un peu) secrets…","tags":["IPT Sup"]},"fields":{"slug":"/ipt/sup/rot13/"},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"ROT13\",\n  \"subtitle\": \"Où l'on code des messages pour les rendre (un peu) secrets…\",\n  \"tags\": [\"IPT Sup\"],\n  \"date\": \"2018-07-16\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Introduction\"), mdx(\"p\", null, \"Le ROT13 (de l'anglais \\xAB\", \"\\xA0\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"rotate by 13 places\"), \"\\xA0\", \"\\xBB) est un cas particulier du chiffre de C\\xE9sar, un algorithme simpliste de chiffrement de texte. Comme son nom l'indique, il s'agit de d\\xE9caler chaque lettre du texte \\xE0 chiffrer de 13 places. Son principal aspect pratique est que le codage et le d\\xE9codage se font exactement de la m\\xEAme mani\\xE8re. En effet, puisque l'alphabet comporte 26 lettres, il suffit de d\\xE9caler deux fois de 13 caract\\xE8res pour revenir \\xE0 la lettre de d\\xE9part.\"), mdx(\"p\", null, \"Cependant, contrairement \\xE0 d'autres m\\xE9thodes de cryptographie (o\\xF9 l'int\\xE9r\\xEAt r\\xE9side dans le fait qu'il est difficile voire impossible de lire le message si l'on n'a pas le code pour le d\\xE9coder), il s'agit plus ici de faire en sorte que le message ne soit pas lisible directement mais qu'il soit n\\xE9anmoins possible de l'obtenir sans grosses difficult\\xE9s.\"), mdx(\"p\", null, \"D\\xE9monstration\", \"\\xA0\", \":\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Qu'est-ce qui fait nioc nioc ?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Ha pnaneq dhv antr n y'rairef.\")), mdx(\"p\", null, \"Nous allons programmer cette m\\xE9thode, ainsi que quelques variantes.\"), mdx(\"h1\", null, \"Caract\\xE8res et code ASCII\"), mdx(\"p\", null, \"Les caract\\xE8res usuels sont, dans la version la plus simple, cod\\xE9s par un entier compris en 32 et 126. Ce codage, qui date de 1963, s'appelle le code \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ASCII\"), \" (pour \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"American Standard Code for Information Interchange\"), \"). Avec ce code, la virgule est le caract\\xE8re num\\xE9ro 44, le \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"A\"), \" est le caract\\xE8re\", \"\\xA0\", \"65.\"), mdx(\"p\", null, \"En Python, deux fonctions permettent de manipuler ces codes. La fonction \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ord\"), \" permet d'obtenir le num\\xE9ro d'un caract\\xE8re donn\\xE9, alors que \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"chr\"), \" permet d'avoir le caract\\xE8re correspondant \\xE0 un num\\xE9ro\\ndonn\\xE9.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Question\"), \" Essayez les commandes suivantes, pour v\\xE9rifier que\\nvous avez bien compris.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-python\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \">>> \"), \"chr(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"63\"), \")\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \">>> \"), \"ord(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'A'\"), \")\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \">>> \"), \"chr(ord(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'A'\"), \") + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-number\"\n  }), \"4\"), \")\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Question\"), \" Quel est le code ASCII du caract\\xE8re \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \":\"), \"\\xA0\", \"? Quel est le caract\\xE8re de code\", \"\\xA0\", \"48\", \"\\xA0\", \"?\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Question\"), \" \\xC9crire une suite d'instruction pour que la variable \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ascii\"), \", de type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"str\"), \", contienne tous les caract\\xE8res ASCII dans l'ordre.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Remarque\"), \" Le code ASCII comporte un gros inconv\\xE9nient\", \"\\xA0\", \": Mis au point par les am\\xE9ricains, il ne code pas les accents et plus g\\xE9n\\xE9ralement, les lettres avec \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"signes diacritiques\"), \" (comme les accents, tr\\xE9mas, c\\xE9dilles, etc.). C'est d'ailleurs compr\\xE9hensible, car rien que pour les langues latines, le nombre de lettres avec signe diacritique est trop important pour qu'il soit possible de coder un caract\\xE8res sur un octet. \"), mdx(\"p\", null, \"Cela a eu pour cons\\xE9quence facheuse qu'afin d'inclure les diacritiques, de nombreux codages ont \\xE9t\\xE9 mis au point, incompatibles entre eux. La cons\\xE9quence a \\xE9t\\xE9 que pendant longtemps, \\xE0 cause de ces probl\\xE8mes de codage, il \\xE9tait fr\\xE9quent de croiser des choses comme\", \"\\xA0\", \":\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\xAB\", \"\\xA0\", \"La vie n'est bonne qu'\\xC3\", \"\\xA0\", \"\\xC3\\xA9tudier et \\xC3\", \"\\xA0\", \"enseigner les\\nmath\\xC3\\xA9matiques.\", \"\\xA0\", \"\\xBB\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u2014 Blaise Pascal\")), mdx(\"p\", null, \"La situation s'am\\xE9liore maintenant avec la cr\\xE9ation du code\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Unicode\"), \". En Python\", \"\\xA0\", \"3, les cha\\xEEnes de caract\\xE8res sont cod\\xE9es en \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"utf-8\"), \", la version usuelle de l'\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Unicode\"), \". Les caract\\xE8res du code ASCII se retrouvent avec le m\\xEAme code en \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"utf-8\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Remarque\"), \" En \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"utf-8\"), \", les caract\\xE8res accentu\\xE9s y sont cod\\xE9s sur deux octets. On peut le voir en Python\", \"\\xA0\", \"2, qui n'est pas configur\\xE9 par d\\xE9faut pour utiliser l'\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"utf-8\"), \", en tapant les instructions suivantes\", \"\\xA0\", \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-python\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \">>> \"), \"len(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"e\\\"\"), \")\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \">>> \"), \"len(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"\\xE9\\\"\"), \")\\n\")), mdx(\"p\", null, \"Mais Python\", \"\\xA0\", \"3, plus habitu\\xE9 \\xE0 l'\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"utf-8\"), \", sait comment d\\xE9couper les cha\\xEEnes de caract\\xE8res, et donc voit \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"\\xE9\\\"\"), \" comme un unique caract\\xE8re.\"), mdx(\"p\", null, \"Pour la suite du TP, on commencera par ne tra\\xEEter que des cha\\xEEnes de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"caract\\xE8res non accentu\\xE9s\"), \".\"), mdx(\"h1\", null, \"L'impl\\xE9mentation du ROT13\"), mdx(\"p\", null, \"\\xC0 partir de maintenant, nous allons \\xE9crire un ensemble de fonctions pour impl\\xE9menter le codage ROT13. Les fonctions suivantes sont donc \\xE0 \\xE9crire dans un ficher plut\\xF4t que dans la console.\"), mdx(\"p\", null, \"Commen\\xE7ons par les majuscules.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Question\"), \" Quels sont les lettres majuscules dont le chiffrage\\npar ROT13 revient \\xE0 ajouter 13 au code ASCII\", \"\\xA0\", \"? Et celles pour lesquelles on retranche\", \"\\xA0\", \"13\", \"\\xA0\", \"? Quels sont les codes ASCII correspondants\", \"\\xA0\", \"?\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Question\"), \" \\xC9crire une fonction \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"carrot13\"), \" (qui applique \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rot13\"), \" aux caract\\xE8res, ou \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"car\"), \") qui prends en entr\\xE9e un caract\\xE8re \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"c\"), \", et retourne un caract\\xE8re qui est\", \"\\xA0\", \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"soit \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"c\"), \" si ce n'est pas une lettre majuscule\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"le caract\\xE8re obtenu \\xE0 partir de \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"c\"), \" apr\\xE8s chiffrage par ROT13 si c'est une lettre majuscule.\")), mdx(\"p\", null, \"On veut par exemple avoir\", \"\\xA0\", \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-python\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \">>> \"), \"carrot13(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'i'\"), \")\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'i'\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \">>> \"), \"carrot13(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'B'\"), \")\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'O'\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \">>> \"), \"carrot13(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"','\"), \")\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"','\"), \"\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Question\"), \" Modifier la fonction pr\\xE9c\\xE9dente pour que le chiffrage ROT13 s'applique aussi aux lettres minuscules.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Question\"), \" \\xC9crire une fonction \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rot13\"), \" qui prends en entr\\xE9e une cha\\xEEne de caract\\xE8res et retourne la cha\\xEEne de caract\\xE8res o\\xF9 toutes les lettres ont subi un chiffrage ROT13.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Question\"), \" Trouver la r\\xE9ponse \\xE0 la question du d\\xE9but.\"), mdx(\"h2\", null, \"Une variante, le ROT47\"), mdx(\"p\", null, \"Une variante du chiffrage ROT13 et le ROT47, qui utilise tous les caract\\xE8res du code ASCII except\\xE9 l'espace. Cela correspond donc aux caract\\xE8res allant du code 33 au code 126 (en particulier, on laisse inchang\\xE9 le caract\\xE8re num\\xE9ro 32, qui est l'espace). Cela repr\\xE9sente donc \", mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"inlineMath\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"katex\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"katex-mathml\"\n  }), mdx(\"math\", {\n    parentName: \"span\"\n  }, mdx(\"semantics\", {\n    parentName: \"math\"\n  }, mdx(\"mrow\", {\n    parentName: \"semantics\"\n  }, mdx(\"mn\", {\n    parentName: \"mrow\"\n  }, \"126\"), mdx(\"mo\", {\n    parentName: \"mrow\"\n  }, \"\\u2212\"), mdx(\"mn\", {\n    parentName: \"mrow\"\n  }, \"33\"), mdx(\"mo\", {\n    parentName: \"mrow\"\n  }, \"+\"), mdx(\"mn\", {\n    parentName: \"mrow\"\n  }, \"1\"), mdx(\"mo\", {\n    parentName: \"mrow\"\n  }, \"=\"), mdx(\"mn\", {\n    parentName: \"mrow\"\n  }, \"94\"), mdx(\"mo\", {\n    parentName: \"mrow\"\n  }, \"=\"), mdx(\"mn\", {\n    parentName: \"mrow\"\n  }, \"2\"), mdx(\"mo\", {\n    parentName: \"mrow\"\n  }, \"\\xD7\"), mdx(\"mn\", {\n    parentName: \"mrow\"\n  }, \"47\")), mdx(\"annotation\", _extends({\n    parentName: \"semantics\"\n  }, {\n    \"encoding\": \"application/x-tex\"\n  }), \"&#123;`126 - 33 + 1 = 94 = 2 \\\\\\\\times 47`&#125;\")))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"base\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.72777em\",\n      \"verticalAlign\": \"-0.08333em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), \"2\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), \"6\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2222222222222222em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mbin\"\n  }), \"\\u2212\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2222222222222222em\"\n    }\n  }))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"base\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.72777em\",\n      \"verticalAlign\": \"-0.08333em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), \"3\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), \"3\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2222222222222222em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mbin\"\n  }), \"+\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2222222222222222em\"\n    }\n  }))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"base\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.64444em\",\n      \"verticalAlign\": \"0em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2777777777777778em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mrel\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2777777777777778em\"\n    }\n  }))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"base\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.64444em\",\n      \"verticalAlign\": \"0em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), \"9\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), \"4\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2777777777777778em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mrel\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2777777777777778em\"\n    }\n  }))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"base\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.72777em\",\n      \"verticalAlign\": \"-0.08333em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), \"2\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2222222222222222em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mbin\"\n  }), \"\\xD7\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2222222222222222em\"\n    }\n  }))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"base\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.64444em\",\n      \"verticalAlign\": \"0em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), \"4\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), \"7\"))))), \" caract\\xE8res. On d\\xE9cale donc tous les codes de 47, et deux d\\xE9calages ram\\xE8nent au caract\\xE8re de d\\xE9part.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Question pour les PTSI1\"), \" Programmez la m\\xE9thode de chiffrage ROT47, et d\\xE9chiffrez la phrase suivante\", \"\\xA0\", \":\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Attention\"), \" Le caract\\xE8re \", mdx(\"code\", null, \"`\"), \" est un accent grave et non une apostrophe. Son code ASCII est\", \"\\xA0\", \"96.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Question pour les PTSI2\"), \" Programmez la m\\xE9thode de chiffrage ROT47, et d\\xE9chiffrez la phrase suivante\", \"\\xA0\", \":\"), mdx(\"h1\", null, \"Comment supprimer les accents et autres\"), mdx(\"p\", null, \"Jusqu'\\xE0 pr\\xE9sent, nous avons suppos\\xE9 que les textes \\xE0 chiffrer ne contenaient aucun signe diacritique. Pour traiter des textes g\\xE9n\\xE9raux, il faut tout d'abord les supprimer. Pour ne pas surcharger les fonctions qui suivent, on ne tra\\xEEtera que les minuscules. L'ajout du tra\\xEEtement des majuscules ne complique pas les fonctions, il ne fait que les allonger.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Question\"), \" \\xC9crire une fonction \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"desaccente\"), \" qui, \\xE9tant donn\\xE9 une cha\\xEEne de caract\\xE8res, la retourne apr\\xE8s avoir supprim\\xE9 les accents et autres signes diacritiques.\"), mdx(\"p\", null, \"On rappelle qu'en fran\\xE7ais, les lettres \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"diacrit\\xE9es\"), \" usuelles sont\"), mdx(Center, {\n    mdxType: \"Center\"\n  }, \"\\xE0 \\xE2 \\xE4 \\xE7 \\xE9 \\xE8 \\xEA \\xEB \\xEE \\xEF \\xF4 \\xF6 \\xF9 \\xFB \\xFC\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Question\"), \" Modifiez la fonction \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"desaccente\"), \" pour qu'elle transforme les ligatures \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\xE6\"), \" et \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\u0153\"), \" en \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ae\"), \" et \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"oe\"), \" respectivement.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Remarque\"), \" Sous Windows, on entrera les caract\\xE8res \\xE6 et \\u0153 en tapant respectivement \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"alt + 0 2 3 0\"), \" et \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"alt + 0 1 5 6\"), \". Sous MacOS\", \"\\xA0\", \"X, on utilisera \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"alt + a\"), \" et \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"alt + o\"), \" et, sous Linux, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"altGr + a\"), \" et \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"altGr + o\"), \".\"), mdx(\"h1\", null, \"Le code de C\\xE9sar\"), mdx(\"p\", null, \"Le chiffrage ROT13 consiste donc, si vous avez bien suivi, \\xE0 d\\xE9caler les\\nlettres de 13 rangs, \\xE9ventuellement en bouclant. Une telle m\\xE9thode de\\nchiffrage est appel\\xE9e \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"code de C\\xE9sar\"), \", en m\\xE9moire de Jules C\\xE9sar\\nqui en utilisait un version, comme le montre la citation suivante\", \"\\xA0\", \":\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\xAB\", \"\\xA0\", \"Il y employait, pour les choses tout \\xE0 fait secr\\xE8tes, une esp\\xE8ce de chiffre qui en rendait le sens inintelligible (les lettres \\xE9tant dispos\\xE9es de mani\\xE8re \\xE0 ne pouvoir jamais former un mot), et qui consistait, je le dis pour ceux qui voudront les d\\xE9chiffrer, \\xE0 changer le rang des lettres dans l'alphabet, en \\xE9crivant la quatri\\xE8me pour la premi\\xE8re, c'est-\\xE0-dire le\", \"\\xA0\", \"d pour le\", \"\\xA0\", \"a, et ainsi de suite.\", \"\\xA0\", \"\\xBB\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u2014 Su\\xE9tone, Vie des douze C\\xE9sars, Livre\", \"\\xA0\", \"I, paragraphe\", \"\\xA0\", \"56.\")), mdx(\"p\", null, \"C\\xE9sar utilisait donc un d\\xE9calage de\", \"\\xA0\", \"4, et le ROT13 un d\\xE9calage de\", \"\\xA0\", \"13. On peut en fait utiliser pour effectuer le d\\xE9calage tout entier compris entre\", \"\\xA0\", \"1 et\", \"\\xA0\", \"25.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Question\"), \" \\xC9crire une fonction \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cesar\"), \" qui prends en argument un tel entier \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"n\"), \" et une cha\\xEEne de caract\\xE8re, et retourne le texte cod\\xE9 par un d\\xE9calage des lettres de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"n\"), \" places.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"5c79b362-c9f0-5f2a-979d-6968c9d7e472"}}}